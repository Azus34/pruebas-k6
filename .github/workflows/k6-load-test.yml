name: K6 Load Testing Pipeline

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  k6_load_test:
    name: Ejecutar Pruebas de Carga K6
    runs-on: ubuntu-latest

    steps:
      - name: 📦 Checkout del repositorio
        uses: actions/checkout@v4

      - name: ⚙️ Instalar K6
        run: |
          sudo apt-get update
          sudo apt-get install -y gnupg2 apt-transport-https
          sudo mkdir -p /etc/apt/keyrings
          gpg --no-default-keyring --keyring /usr/share/keyrings/k6-archive-keyring.gpg --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys C5AD17C747E3232A
          echo "deb [signed-by=/usr/share/keyrings/k6-archive-keyring.gpg] https://dl.k6.io/deb stable main" | sudo tee /etc/apt/sources.list.d/k6-stable-focal.list
          sudo apt-get update
          sudo apt-get install -y k6

      - name: ✅ Verificar instalación de K6
        run: k6 version

      - name: 📦 Instalar dependencias de Node.js
        run: |
          cd fps-api
          npm install

      - name: 🚀 Iniciar servidor FPS API
        run: |
          cd fps-api
          npm start > server.log 2>&1 &
          SERVER_PID=$!
          echo $SERVER_PID > server.pid
          sleep 5
          if ps -p $SERVER_PID > /dev/null; then
            echo "✅ Servidor iniciado (PID: $SERVER_PID)"
          else
            echo "❌ Error: Servidor no se inició"
            cat server.log
            exit 1
          fi

      - name: 🧪 Verificar conectividad con el servidor
        run: |
          echo "Intentando conectar con localhost:3000..."
          for i in {1..20}; do
            if curl -s -f http://localhost:3000/api/health > /dev/null 2>&1; then
              echo "✅ Conexión exitosa en intento $i"
              curl -s http://localhost:3000/api/health | head -20
              exit 0
            fi
            echo "⏳ Intento $i/20 - Esperando..."
            sleep 1
          done
          echo "❌ No se pudo conectar con el servidor"
          exit 1

      - name: ☁️ Ejecutar pruebas K6 en Grafana Cloud
        run: |
          cd pruebas_k6
          echo "🚀 Ejecutando pruebas de carga..."
          k6 cloud run fps-api-test.js
        env:
          K6_CLOUD_TOKEN: ${{ secrets.K6_CLOUD_TOKEN }}

      - name: 📊 Confirmar ejecución
        if: always()
        run: |
          echo "✅ Pruebas completadas"
          echo "📊 Resultados: https://grafana.com/a/k6-app"

      - name: 📤 Subir logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: k6-logs
          path: fps-api/server.log
          retention-days: 30
          if-no-files-found: ignore
